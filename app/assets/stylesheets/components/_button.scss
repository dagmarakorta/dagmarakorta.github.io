.button {
  background-color: #18BEA0;
  color: $light-gray;
  padding: 12px;
  margin: 5px;
  width: fit-content;
  box-shadow: 0 0 15px rgba(0,0,0,0.2);
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 7px;
  text-decoration: none;
  font-weight: lighter;

  &:hover {
    background-color: $dark-azur;
    color: $light-gray;
  }

  a:hover {
    text-decoration: none;
    color: $light-gray;
  }
}

.button-favorites {
  font-size: 20px;
  padding: 5px 10px;
  text-align: center;
  display: flex;
  justify-content: space-around;
  align-items: center;
  i {
    margin-right: 10px;
  }
}

.modebutton {
  display: inline-block;
    width: 60px;
    height: 15px;
    background-color: #fff;
    border-radius: 30px;
    position: relative;
    cursor: pointer;
}

.modebutton::after {
  content: url("../../images/sun-line.svg");
  /* Add in the image. You could also add an icon by the using the icon's unicode (sites like fontawesome.com provide this). */
  width: 25px;
  height: 25px;
  /* Making the icon slightly taller than the button container. */
  background-color: #e03c3c;
  border: 2px solid #fff;
  border-radius: 50%;
  box-shadow: 0 0 5px rgba(0, 0, 0, .25);
  position: absolute;
  top: -5px;
  /* Since the button has a height of 35px and the ::after has 40px, we offset the difference by pushing it up by 5px to center this element vertically. */
  left: 0;
  display: grid;
  /* Used for centering the icon image in the middle in conjunction with place content center. */
  place-content: center;
  line-height: 0;
  /*By default this will have a line height. This means that the image will not be perfectly centered by using the properties above. To make sure we can center this image in the middle, we make the line height 0. */
  transition: background-color 1s,
      transform 1s ease-in;
}

#toggle:checked+.modebutton::after {
  content: url("../../images/moon-line.svg");
  /* Switching the images when clicked. */
  background-color: #1f257f;
  transform: translateX(50px) rotate(360deg);
  /* Since the width of the button is 90px and the pseudo element is 40px we translate by a number that adds up to 90. So we translate to the right by 50px ( 40 + 50 = 90 width of the button). We also rotate this element by 360 degrees. */
}

#toggle {
  display: none;
}

.button-homepage {
  padding: 10px 35px;
  border-radius: 10px;
  font-size: 18px;
}
